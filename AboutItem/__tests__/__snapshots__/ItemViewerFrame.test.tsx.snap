// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ItemViewerFrame after page content is loaded 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="itemViewerFrame"
    tabIndex={0}
>
    <iframe
        className="itemviewer-iframe"
        id="itemviewer-iframe"
        onLoad={[Function]}
        onLoadStart={[Function]}
        src="http://test.com"
    />
</div>,
  "nodes": Array [
    <div
      className="itemViewerFrame"
      tabIndex={0}
>
      <iframe
            className="itemviewer-iframe"
            id="itemviewer-iframe"
            onLoad={[Function]}
            onLoadStart={[Function]}
            src="http://test.com"
      />
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <ItemFrame
        url="http://test.com"
/>,
      "_debugID": 3,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": ItemFrame {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "finishLoad": [Function],
        "props": Object {
          "url": "http://test.com",
        },
        "refs": Object {},
        "startLoad": [Function],
        "state": Object {
          "loading": false,
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 2,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="itemViewerFrame"
          tabIndex={0}
>
          <iframe
                    className="itemviewer-iframe"
                    id="itemviewer-iframe"
                    onLoad={[Function]}
                    onLoadStart={[Function]}
                    src="http://test.com"
          />
</div>,
        "_debugID": 4,
        "_renderedOutput": <div
          className="itemViewerFrame"
          tabIndex={0}
>
          <iframe
                    className="itemviewer-iframe"
                    id="itemviewer-iframe"
                    onLoad={[Function]}
                    onLoadStart={[Function]}
                    src="http://test.com"
          />
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <ItemFrame
    url="http://test.com"
/>,
}
`;

exports[`ItemViewerFrame matches snapshot while loading 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="itemViewerFrame"
    tabIndex={0}
>
    <div
        className="itemviewer-iframe-spinner"
    >
        <img
            src="/images/spin-large.gif"
        />
    </div>
    <iframe
        className="itemviewer-iframe"
        id="itemviewer-iframe"
        onLoad={[Function]}
        onLoadStart={[Function]}
        src="http://test.com"
    />
</div>,
  "nodes": Array [
    <div
      className="itemViewerFrame"
      tabIndex={0}
>
      <div
            className="itemviewer-iframe-spinner"
      >
            <img
                  src="/images/spin-large.gif"
            />
      </div>
      <iframe
            className="itemviewer-iframe"
            id="itemviewer-iframe"
            onLoad={[Function]}
            onLoadStart={[Function]}
            src="http://test.com"
      />
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <ItemFrame
        url="http://test.com"
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": ItemFrame {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "finishLoad": [Function],
        "props": Object {
          "url": "http://test.com",
        },
        "refs": Object {},
        "startLoad": [Function],
        "state": Object {
          "loading": true,
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="itemViewerFrame"
          tabIndex={0}
>
          <div
                    className="itemviewer-iframe-spinner"
          >
                    <img
                              src="/images/spin-large.gif"
                    />
          </div>
          <iframe
                    className="itemviewer-iframe"
                    id="itemviewer-iframe"
                    onLoad={[Function]}
                    onLoadStart={[Function]}
                    src="http://test.com"
          />
</div>,
        "_debugID": 2,
        "_renderedOutput": <div
          className="itemViewerFrame"
          tabIndex={0}
>
          <div
                    className="itemviewer-iframe-spinner"
          >
                    <img
                              src="/images/spin-large.gif"
                    />
          </div>
          <iframe
                    className="itemviewer-iframe"
                    id="itemviewer-iframe"
                    onLoad={[Function]}
                    onLoadStart={[Function]}
                    src="http://test.com"
          />
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <ItemFrame
    url="http://test.com"
/>,
}
`;

exports[`ItemViewerFrame no item found 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="no-item"
>
    <p>
        No Item Found
    </p>
</div>,
  "nodes": Array [
    <div
      className="no-item"
>
      <p>
            No Item Found
      </p>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <ItemFrame
        url=""
/>,
      "_debugID": 5,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": ItemFrame {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "finishLoad": [Function],
        "props": Object {
          "url": "",
        },
        "refs": Object {},
        "startLoad": [Function],
        "state": Object {
          "loading": true,
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 3,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="no-item"
>
          <p>
                    No Item Found
          </p>
</div>,
        "_debugID": 6,
        "_renderedOutput": <div
          className="no-item"
>
          <p>
                    No Item Found
          </p>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <ItemFrame
    url=""
/>,
}
`;
