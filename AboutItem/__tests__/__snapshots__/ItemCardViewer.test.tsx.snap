// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ItemCardViewer renders information tab 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="item-card"
>
    <ItemTabs
        changedTab={[Function]}
        selectedTab="information"
    />
    <div>
         
        <div
            className="item-content"
        >
            <div>
                <ItemInformationDetail
                    commonCoreStandardsDescription="commonCoreStandardsDescription"
                    depthOfKnowledge="depthOfKnowledge"
                    educationalDifficulty="educationalDifficulty"
                    evidenceStatement="evidenceStatement"
                    itemCardViewModel={
                        Object {
                            "bankKey": 1,
                            "claimCode": "claim_1234",
                            "claimLabel": "claim_math",
                            "grade": 1,
                            "gradeLabel": "1",
                            "interactionTypeCode": "type01",
                            "interactionTypeLabel": "type01label",
                            "isPerformanceItem": false,
                            "itemKey": 123,
                            "subjectCode": "Math",
                            "subjectLabel": "MTH",
                            "target": "",
                            "title": "test_title",
                          }
                    }
                    targetDescription="targetDescription"
                />
            </div>
        </div>
    </div>
</div>,
  "nodes": Array [
    <div
      className="item-card"
>
      <ItemTabs
            changedTab={[Function]}
            selectedTab="information"
      />
      <div>
             
            <div
                  className="item-content"
            >
                  <div>
                        <ItemInformationDetail
                              commonCoreStandardsDescription="commonCoreStandardsDescription"
                              depthOfKnowledge="depthOfKnowledge"
                              educationalDifficulty="educationalDifficulty"
                              evidenceStatement="evidenceStatement"
                              itemCardViewModel={
                                    Object {
                                          "bankKey": 1,
                                          "claimCode": "claim_1234",
                                          "claimLabel": "claim_math",
                                          "grade": 1,
                                          "gradeLabel": "1",
                                          "interactionTypeCode": "type01",
                                          "interactionTypeLabel": "type01label",
                                          "isPerformanceItem": false,
                                          "itemKey": 123,
                                          "subjectCode": "Math",
                                          "subjectLabel": "MTH",
                                          "target": "",
                                          "title": "test_title",
                                        }
                              }
                              targetDescription="targetDescription"
                        />
                  </div>
            </div>
      </div>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <ItemCardViewer
        item={
                Object {
                        "commonCoreStandardsDescription": "commonCoreStandardsDescription",
                        "depthOfKnowledge": "depthOfKnowledge",
                        "educationalDifficulty": "educationalDifficulty",
                        "evidenceStatement": "evidenceStatement",
                        "itemCardViewModel": Object {
                          "bankKey": 1,
                          "claimCode": "claim_1234",
                          "claimLabel": "claim_math",
                          "grade": 1,
                          "gradeLabel": "1",
                          "interactionTypeCode": "type01",
                          "interactionTypeLabel": "type01label",
                          "isPerformanceItem": false,
                          "itemKey": 123,
                          "subjectCode": "Math",
                          "subjectLabel": "MTH",
                          "target": "",
                          "title": "test_title",
                        },
                        "rubrics": Array [],
                        "targetDescription": "targetDescription",
                      }
        }
/>,
      "_debugID": 5,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": ItemCardViewer {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "item": Object {
            "commonCoreStandardsDescription": "commonCoreStandardsDescription",
            "depthOfKnowledge": "depthOfKnowledge",
            "educationalDifficulty": "educationalDifficulty",
            "evidenceStatement": "evidenceStatement",
            "itemCardViewModel": Object {
              "bankKey": 1,
              "claimCode": "claim_1234",
              "claimLabel": "claim_math",
              "grade": 1,
              "gradeLabel": "1",
              "interactionTypeCode": "type01",
              "interactionTypeLabel": "type01label",
              "isPerformanceItem": false,
              "itemKey": 123,
              "subjectCode": "Math",
              "subjectLabel": "MTH",
              "target": "",
              "title": "test_title",
            },
            "rubrics": Array [],
            "targetDescription": "targetDescription",
          },
        },
        "refs": Object {},
        "state": Object {
          "selectedTab": "information",
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 3,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="item-card"
>
          <ItemTabs
                    changedTab={[Function]}
                    selectedTab="information"
          />
          <div>
                     
                    <div
                              className="item-content"
                    >
                              <div>
                                        <ItemInformationDetail
                                                  commonCoreStandardsDescription="commonCoreStandardsDescription"
                                                  depthOfKnowledge="depthOfKnowledge"
                                                  educationalDifficulty="educationalDifficulty"
                                                  evidenceStatement="evidenceStatement"
                                                  itemCardViewModel={
                                                            Object {
                                                                      "bankKey": 1,
                                                                      "claimCode": "claim_1234",
                                                                      "claimLabel": "claim_math",
                                                                      "grade": 1,
                                                                      "gradeLabel": "1",
                                                                      "interactionTypeCode": "type01",
                                                                      "interactionTypeLabel": "type01label",
                                                                      "isPerformanceItem": false,
                                                                      "itemKey": 123,
                                                                      "subjectCode": "Math",
                                                                      "subjectLabel": "MTH",
                                                                      "target": "",
                                                                      "title": "test_title",
                                                                    }
                                                  }
                                                  targetDescription="targetDescription"
                                        />
                              </div>
                    </div>
          </div>
</div>,
        "_debugID": 6,
        "_renderedOutput": <div
          className="item-card"
>
          <ItemTabs
                    changedTab={[Function]}
                    selectedTab="information"
          />
          <div>
                     
                    <div
                              className="item-content"
                    >
                              <div>
                                        <ItemInformationDetail
                                                  commonCoreStandardsDescription="commonCoreStandardsDescription"
                                                  depthOfKnowledge="depthOfKnowledge"
                                                  educationalDifficulty="educationalDifficulty"
                                                  evidenceStatement="evidenceStatement"
                                                  itemCardViewModel={
                                                            Object {
                                                                      "bankKey": 1,
                                                                      "claimCode": "claim_1234",
                                                                      "claimLabel": "claim_math",
                                                                      "grade": 1,
                                                                      "gradeLabel": "1",
                                                                      "interactionTypeCode": "type01",
                                                                      "interactionTypeLabel": "type01label",
                                                                      "isPerformanceItem": false,
                                                                      "itemKey": 123,
                                                                      "subjectCode": "Math",
                                                                      "subjectLabel": "MTH",
                                                                      "target": "",
                                                                      "title": "test_title",
                                                                    }
                                                  }
                                                  targetDescription="targetDescription"
                                        />
                              </div>
                    </div>
          </div>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <ItemCardViewer
    item={
        Object {
            "commonCoreStandardsDescription": "commonCoreStandardsDescription",
            "depthOfKnowledge": "depthOfKnowledge",
            "educationalDifficulty": "educationalDifficulty",
            "evidenceStatement": "evidenceStatement",
            "itemCardViewModel": Object {
              "bankKey": 1,
              "claimCode": "claim_1234",
              "claimLabel": "claim_math",
              "grade": 1,
              "gradeLabel": "1",
              "interactionTypeCode": "type01",
              "interactionTypeLabel": "type01label",
              "isPerformanceItem": false,
              "itemKey": 123,
              "subjectCode": "Math",
              "subjectLabel": "MTH",
              "target": "",
              "title": "test_title",
            },
            "rubrics": Array [],
            "targetDescription": "targetDescription",
          }
    }
/>,
}
`;

exports[`ItemCardViewer renders rubric tab 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="item-card"
>
    <ItemTabs
        changedTab={[Function]}
        selectedTab="rubric"
    />
    <div>
         
        <div
            className="item-content"
        >
            
        </div>
         
    </div>
</div>,
  "nodes": Array [
    <div
      className="item-card"
>
      <ItemTabs
            changedTab={[Function]}
            selectedTab="rubric"
      />
      <div>
             
            <div
                  className="item-content"
            >
                  
            </div>
             
      </div>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <ItemCardViewer
        item={
                Object {
                        "commonCoreStandardsDescription": "commonCoreStandardsDescription",
                        "depthOfKnowledge": "depthOfKnowledge",
                        "educationalDifficulty": "educationalDifficulty",
                        "evidenceStatement": "evidenceStatement",
                        "itemCardViewModel": Object {
                          "bankKey": 1,
                          "claimCode": "claim_1234",
                          "claimLabel": "claim_math",
                          "grade": 1,
                          "gradeLabel": "1",
                          "interactionTypeCode": "type01",
                          "interactionTypeLabel": "type01label",
                          "isPerformanceItem": false,
                          "itemKey": 123,
                          "subjectCode": "Math",
                          "subjectLabel": "MTH",
                          "target": "",
                          "title": "test_title",
                        },
                        "rubrics": Array [],
                        "targetDescription": "targetDescription",
                      }
        }
/>,
      "_debugID": 3,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": ItemCardViewer {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "item": Object {
            "commonCoreStandardsDescription": "commonCoreStandardsDescription",
            "depthOfKnowledge": "depthOfKnowledge",
            "educationalDifficulty": "educationalDifficulty",
            "evidenceStatement": "evidenceStatement",
            "itemCardViewModel": Object {
              "bankKey": 1,
              "claimCode": "claim_1234",
              "claimLabel": "claim_math",
              "grade": 1,
              "gradeLabel": "1",
              "interactionTypeCode": "type01",
              "interactionTypeLabel": "type01label",
              "isPerformanceItem": false,
              "itemKey": 123,
              "subjectCode": "Math",
              "subjectLabel": "MTH",
              "target": "",
              "title": "test_title",
            },
            "rubrics": Array [],
            "targetDescription": "targetDescription",
          },
        },
        "refs": Object {},
        "state": Object {
          "selectedTab": "rubric",
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 2,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="item-card"
>
          <ItemTabs
                    changedTab={[Function]}
                    selectedTab="rubric"
          />
          <div>
                     
                    <div
                              className="item-content"
                    >
                              
                    </div>
                     
          </div>
</div>,
        "_debugID": 4,
        "_renderedOutput": <div
          className="item-card"
>
          <ItemTabs
                    changedTab={[Function]}
                    selectedTab="rubric"
          />
          <div>
                     
                    <div
                              className="item-content"
                    >
                              
                    </div>
                     
          </div>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <ItemCardViewer
    item={
        Object {
            "commonCoreStandardsDescription": "commonCoreStandardsDescription",
            "depthOfKnowledge": "depthOfKnowledge",
            "educationalDifficulty": "educationalDifficulty",
            "evidenceStatement": "evidenceStatement",
            "itemCardViewModel": Object {
              "bankKey": 1,
              "claimCode": "claim_1234",
              "claimLabel": "claim_math",
              "grade": 1,
              "gradeLabel": "1",
              "interactionTypeCode": "type01",
              "interactionTypeLabel": "type01label",
              "isPerformanceItem": false,
              "itemKey": 123,
              "subjectCode": "Math",
              "subjectLabel": "MTH",
              "target": "",
              "title": "test_title",
            },
            "rubrics": Array [],
            "targetDescription": "targetDescription",
          }
    }
/>,
}
`;

exports[`ItemCardViewer renders viewer tab 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="item-card"
>
    <ItemTabs
        changedTab={[Function]}
        selectedTab="viewer"
    />
    <div>
         
        <div
            className="item-content"
        >
            <ItemFrame
                url="http://ivs.smarterbalanced.org/items?ids=1-123"
            />
        </div>
         
    </div>
</div>,
  "nodes": Array [
    <div
      className="item-card"
>
      <ItemTabs
            changedTab={[Function]}
            selectedTab="viewer"
      />
      <div>
             
            <div
                  className="item-content"
            >
                  <ItemFrame
                        url="http://ivs.smarterbalanced.org/items?ids=1-123"
                  />
            </div>
             
      </div>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <ItemCardViewer
        item={
                Object {
                        "commonCoreStandardsDescription": "commonCoreStandardsDescription",
                        "depthOfKnowledge": "depthOfKnowledge",
                        "educationalDifficulty": "educationalDifficulty",
                        "evidenceStatement": "evidenceStatement",
                        "itemCardViewModel": Object {
                          "bankKey": 1,
                          "claimCode": "claim_1234",
                          "claimLabel": "claim_math",
                          "grade": 1,
                          "gradeLabel": "1",
                          "interactionTypeCode": "type01",
                          "interactionTypeLabel": "type01label",
                          "isPerformanceItem": false,
                          "itemKey": 123,
                          "subjectCode": "Math",
                          "subjectLabel": "MTH",
                          "target": "",
                          "title": "test_title",
                        },
                        "rubrics": Array [],
                        "targetDescription": "targetDescription",
                      }
        }
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": ItemCardViewer {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "item": Object {
            "commonCoreStandardsDescription": "commonCoreStandardsDescription",
            "depthOfKnowledge": "depthOfKnowledge",
            "educationalDifficulty": "educationalDifficulty",
            "evidenceStatement": "evidenceStatement",
            "itemCardViewModel": Object {
              "bankKey": 1,
              "claimCode": "claim_1234",
              "claimLabel": "claim_math",
              "grade": 1,
              "gradeLabel": "1",
              "interactionTypeCode": "type01",
              "interactionTypeLabel": "type01label",
              "isPerformanceItem": false,
              "itemKey": 123,
              "subjectCode": "Math",
              "subjectLabel": "MTH",
              "target": "",
              "title": "test_title",
            },
            "rubrics": Array [],
            "targetDescription": "targetDescription",
          },
        },
        "refs": Object {},
        "state": Object {
          "selectedTab": "viewer",
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="item-card"
>
          <ItemTabs
                    changedTab={[Function]}
                    selectedTab="viewer"
          />
          <div>
                     
                    <div
                              className="item-content"
                    >
                              <ItemFrame
                                        url="http://ivs.smarterbalanced.org/items?ids=1-123"
                              />
                    </div>
                     
          </div>
</div>,
        "_debugID": 2,
        "_renderedOutput": <div
          className="item-card"
>
          <ItemTabs
                    changedTab={[Function]}
                    selectedTab="viewer"
          />
          <div>
                     
                    <div
                              className="item-content"
                    >
                              <ItemFrame
                                        url="http://ivs.smarterbalanced.org/items?ids=1-123"
                              />
                    </div>
                     
          </div>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <ItemCardViewer
    item={
        Object {
            "commonCoreStandardsDescription": "commonCoreStandardsDescription",
            "depthOfKnowledge": "depthOfKnowledge",
            "educationalDifficulty": "educationalDifficulty",
            "evidenceStatement": "evidenceStatement",
            "itemCardViewModel": Object {
              "bankKey": 1,
              "claimCode": "claim_1234",
              "claimLabel": "claim_math",
              "grade": 1,
              "gradeLabel": "1",
              "interactionTypeCode": "type01",
              "interactionTypeLabel": "type01label",
              "isPerformanceItem": false,
              "itemKey": 123,
              "subjectCode": "Math",
              "subjectLabel": "MTH",
              "target": "",
              "title": "test_title",
            },
            "rubrics": Array [],
            "targetDescription": "targetDescription",
          }
    }
/>,
}
`;
