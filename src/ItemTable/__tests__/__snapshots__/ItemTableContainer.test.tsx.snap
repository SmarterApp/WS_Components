// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ItemPageTable matches snapshot 1`] = `
<div>
  <table
    className="item-table"
  >
    <HeaderTable
      columns={
        Array [
          Object {
            "accessor": [Function],
            "className": "item",
            "compare": [Function],
            "header": "Item",
          },
          Object {
            "accessor": [Function],
            "className": "claimAndTarget",
            "compare": [Function],
            "header": "Claim/Target",
          },
          Object {
            "accessor": [Function],
            "className": "subject",
            "compare": [Function],
            "header": "Subject",
          },
          Object {
            "accessor": [Function],
            "className": "grade",
            "compare": [Function],
            "header": "Grade",
          },
          Object {
            "accessor": [Function],
            "className": "interactionType",
            "compare": [Function],
            "header": "Item Type",
          },
        ]
      }
      onHeaderClick={[Function]}
      sorts={Array []}
    />
    <ItemTable
      columns={
        Array [
          Object {
            "accessor": [Function],
            "className": "item",
            "compare": [Function],
            "header": "Item",
          },
          Object {
            "accessor": [Function],
            "className": "claimAndTarget",
            "compare": [Function],
            "header": "Claim/Target",
          },
          Object {
            "accessor": [Function],
            "className": "subject",
            "compare": [Function],
            "header": "Subject",
          },
          Object {
            "accessor": [Function],
            "className": "grade",
            "compare": [Function],
            "header": "Grade",
          },
          Object {
            "accessor": [Function],
            "className": "interactionType",
            "compare": [Function],
            "header": "Item Type",
          },
        ]
      }
      item={
        Object {
          "content": Object {
            "commonCoreStandardsDescription": "commonCoreStandardsDescription",
            "depthOfKnowledge": "depthOfKnowledge",
            "educationalDifficulty": "educationalDifficulty",
            "evidenceStatement": "evidenceStatement",
            "itemCardViewModel": Object {
              "bankKey": 1,
              "claimCode": "",
              "claimLabel": "",
              "grade": 1023,
              "gradeLabel": "",
              "interactionTypeCode": "",
              "interactionTypeLabel": "",
              "isPerformanceItem": true,
              "itemKey": 3,
              "subjectCode": "",
              "subjectLabel": "",
              "targetHash": 3123,
              "targetId": "",
              "targetShortName": "",
              "title": "",
            },
            "targetDescription": "targetDescription",
          },
          "kind": "success",
        }
      }
      mapRows={
        Array [
          Object {
            "bankKey": 1,
            "claimCode": "",
            "claimLabel": "",
            "grade": 1023,
            "gradeLabel": "",
            "interactionTypeCode": "",
            "interactionTypeLabel": "",
            "isPerformanceItem": true,
            "itemKey": 3,
            "subjectCode": "",
            "subjectLabel": "",
            "targetHash": 3123,
            "targetId": "",
            "targetShortName": "",
            "title": "",
          },
        ]
      }
      onRowExpand={[Function]}
      onRowSelect={[Function]}
      sort={Array []}
    />
  </table>
</div>
`;

exports[`ItemPageTable sorts list on header click 1`] = `
<ItemTableContainer
  item={
    Object {
      "content": Object {
        "commonCoreStandardsDescription": "commonCoreStandardsDescription",
        "depthOfKnowledge": "depthOfKnowledge",
        "educationalDifficulty": "educationalDifficulty",
        "evidenceStatement": "evidenceStatement",
        "itemCardViewModel": Object {
          "bankKey": 1,
          "claimCode": "",
          "claimLabel": "",
          "grade": 1023,
          "gradeLabel": "",
          "interactionTypeCode": "",
          "interactionTypeLabel": "",
          "isPerformanceItem": true,
          "itemKey": 3,
          "subjectCode": "",
          "subjectLabel": "",
          "targetHash": 3123,
          "targetId": "",
          "targetShortName": "",
          "title": "",
        },
        "targetDescription": "targetDescription",
      },
      "kind": "success",
    }
  }
  itemCards={
    Array [
      Object {
        "bankKey": 1,
        "claimCode": "",
        "claimLabel": "",
        "grade": 1023,
        "gradeLabel": "",
        "interactionTypeCode": "",
        "interactionTypeLabel": "",
        "isPerformanceItem": true,
        "itemKey": 3,
        "subjectCode": "",
        "subjectLabel": "",
        "targetHash": 3123,
        "targetId": "",
        "targetShortName": "",
        "title": "",
      },
    ]
  }
  onRowSelection={[Function]}
>
  <div>
    <table
      className="item-table"
    >
      <HeaderTable
        columns={
          Array [
            Object {
              "accessor": [Function],
              "className": "item",
              "compare": [Function],
              "header": "Item",
            },
            Object {
              "accessor": [Function],
              "className": "claimAndTarget",
              "compare": [Function],
              "header": "Claim/Target",
            },
            Object {
              "accessor": [Function],
              "className": "subject",
              "compare": [Function],
              "header": "Subject",
            },
            Object {
              "accessor": [Function],
              "className": "grade",
              "compare": [Function],
              "header": "Grade",
            },
            Object {
              "accessor": [Function],
              "className": "interactionType",
              "compare": [Function],
              "header": "Item Type",
            },
          ]
        }
        onHeaderClick={[Function]}
        sorts={
          Array [
            Object {
              "col": Object {
                "accessor": [Function],
                "className": "item",
                "compare": [Function],
                "header": "Item",
              },
              "direction": 1,
              "resetSortCount": 0,
            },
          ]
        }
      >
        <thead>
          <tr
            className="primary"
          >
            <td
              colSpan={2}
            />
            <th
              className="item"
              key="Item"
              onClick={[Function]}
              onKeyUp={[Function]}
              scope="col"
              tabIndex={0}
            >
              <div
                className="item"
              >
                <span>
                  Item
                </span>
                <span
                  aria-hidden="true"
                  className="fa fa-sort-asc"
                  style={
                    Object {
                      "color": "gray",
                    }
                  }
                />
              </div>
            </th>
            <th
              className="claimAndTarget"
              key="Claim/Target"
              onClick={[Function]}
              onKeyUp={[Function]}
              scope="col"
              tabIndex={0}
            >
              <div
                className="claimAndTarget"
              >
                <span>
                  Claim/Target
                </span>
                <span
                  aria-hidden="true"
                  className="fa fa-sort"
                  style={
                    Object {
                      "color": "gray",
                    }
                  }
                />
              </div>
            </th>
            <th
              className="subject"
              key="Subject"
              onClick={[Function]}
              onKeyUp={[Function]}
              scope="col"
              tabIndex={0}
            >
              <div
                className="subject"
              >
                <span>
                  Subject
                </span>
                <span
                  aria-hidden="true"
                  className="fa fa-sort"
                  style={
                    Object {
                      "color": "gray",
                    }
                  }
                />
              </div>
            </th>
            <th
              className="grade"
              key="Grade"
              onClick={[Function]}
              onKeyUp={[Function]}
              scope="col"
              tabIndex={0}
            >
              <div
                className="grade"
              >
                <span>
                  Grade
                </span>
                <span
                  aria-hidden="true"
                  className="fa fa-sort"
                  style={
                    Object {
                      "color": "gray",
                    }
                  }
                />
              </div>
            </th>
            <th
              className="interactionType"
              key="Item Type"
              onClick={[Function]}
              onKeyUp={[Function]}
              scope="col"
              tabIndex={0}
            >
              <div
                className="interactionType"
              >
                <span>
                  Item Type
                </span>
                <span
                  aria-hidden="true"
                  className="fa fa-sort"
                  style={
                    Object {
                      "color": "gray",
                    }
                  }
                />
              </div>
            </th>
          </tr>
        </thead>
      </HeaderTable>
      <ItemTable
        columns={
          Array [
            Object {
              "accessor": [Function],
              "className": "item",
              "compare": [Function],
              "header": "Item",
            },
            Object {
              "accessor": [Function],
              "className": "claimAndTarget",
              "compare": [Function],
              "header": "Claim/Target",
            },
            Object {
              "accessor": [Function],
              "className": "subject",
              "compare": [Function],
              "header": "Subject",
            },
            Object {
              "accessor": [Function],
              "className": "grade",
              "compare": [Function],
              "header": "Grade",
            },
            Object {
              "accessor": [Function],
              "className": "interactionType",
              "compare": [Function],
              "header": "Item Type",
            },
          ]
        }
        item={
          Object {
            "content": Object {
              "commonCoreStandardsDescription": "commonCoreStandardsDescription",
              "depthOfKnowledge": "depthOfKnowledge",
              "educationalDifficulty": "educationalDifficulty",
              "evidenceStatement": "evidenceStatement",
              "itemCardViewModel": Object {
                "bankKey": 1,
                "claimCode": "",
                "claimLabel": "",
                "grade": 1023,
                "gradeLabel": "",
                "interactionTypeCode": "",
                "interactionTypeLabel": "",
                "isPerformanceItem": true,
                "itemKey": 3,
                "subjectCode": "",
                "subjectLabel": "",
                "targetHash": 3123,
                "targetId": "",
                "targetShortName": "",
                "title": "",
              },
              "targetDescription": "targetDescription",
            },
            "kind": "success",
          }
        }
        mapRows={
          Array [
            Object {
              "bankKey": 1,
              "claimCode": "",
              "claimLabel": "",
              "grade": 1023,
              "gradeLabel": "",
              "interactionTypeCode": "",
              "interactionTypeLabel": "",
              "isPerformanceItem": true,
              "itemKey": 3,
              "subjectCode": "",
              "subjectLabel": "",
              "targetHash": 3123,
              "targetId": "",
              "targetShortName": "",
              "title": "",
            },
          ]
        }
        onRowExpand={[Function]}
        onRowSelect={[Function]}
        sort={
          Array [
            Object {
              "col": Object {
                "accessor": [Function],
                "className": "item",
                "compare": [Function],
                "header": "Item",
              },
              "direction": 1,
              "resetSortCount": 0,
            },
          ]
        }
      >
        <tbody>
          <tr
            className=""
            key="0"
            onClick={[Function]}
            onKeyUp={[Function]}
            tabIndex={0}
          >
            <td
              key="1"
              onClick={[Function]}
              onKeyUp={[Function]}
              tabIndex={0}
            >
              <i
                aria-hidden="true"
                className="fa fa-square-o fa-sm table-icon"
              />
               
            </td>
            <td
              key="3"
            >
              <i
                aria-hidden="true"
                className="fa fa-chevron-right fa-sm table-icon"
              />
            </td>
            <td
              className="item"
              key="Item"
            >
              <div
                className="item-3"
              >
                <a
                  data-event="click"
                  data-for="tooltip-item-3"
                  data-tip="custom tooltip here"
                  onClick={[Function]}
                  onKeyUp={[Function]}
                  role="button"
                  tabIndex={0}
                >
                  3
                </a>
                <ReactTooltip
                  globalEventOff="focusout"
                  id="tooltip-item-3"
                  insecure={true}
                  resizeHide={true}
                  wrapper="div"
                >
                  <div
                    className="__react_component_tooltip place-top type-dark "
                    data-id="tooltip"
                  />
                </ReactTooltip>
              </div>
            </td>
            <td
              className="claimAndTarget"
              key="Claim/Target"
            >
              <div
                className="claimAndTarget-3"
              >
                <a
                  data-event="click"
                  data-for="tooltip-claimAndTarget-3"
                  data-tip="custom tooltip here"
                  onClick={[Function]}
                  onKeyUp={[Function]}
                  role="button"
                  tabIndex={0}
                >
                  /
                </a>
                <ReactTooltip
                  globalEventOff="focusout"
                  id="tooltip-claimAndTarget-3"
                  insecure={true}
                  resizeHide={true}
                  wrapper="div"
                >
                  <div
                    className="__react_component_tooltip place-top type-dark "
                    data-id="tooltip"
                  />
                </ReactTooltip>
              </div>
            </td>
            <td
              className="subject"
              key="Subject"
            >
              <div
                className="subject-3"
              >
                <a
                  data-event="click"
                  data-for="tooltip-subject-3"
                  data-tip="custom tooltip here"
                  onClick={[Function]}
                  onKeyUp={[Function]}
                  role="button"
                  tabIndex={0}
                />
                <ReactTooltip
                  globalEventOff="focusout"
                  id="tooltip-subject-3"
                  insecure={true}
                  resizeHide={true}
                  wrapper="div"
                >
                  <div
                    className="__react_component_tooltip place-top type-dark "
                    data-id="tooltip"
                  />
                </ReactTooltip>
              </div>
            </td>
            <td
              className="grade"
              key="Grade"
            >
              <div
                className="grade-3"
              >
                <a
                  data-event="click"
                  data-for="tooltip-grade-3"
                  data-tip="custom tooltip here"
                  onClick={[Function]}
                  onKeyUp={[Function]}
                  role="button"
                  tabIndex={0}
                />
                <ReactTooltip
                  globalEventOff="focusout"
                  id="tooltip-grade-3"
                  insecure={true}
                  resizeHide={true}
                  wrapper="div"
                >
                  <div
                    className="__react_component_tooltip place-top type-dark "
                    data-id="tooltip"
                  />
                </ReactTooltip>
              </div>
            </td>
            <td
              className="interactionType"
              key="Item Type"
            >
              <div
                className="interactionType-3"
              >
                <a
                  data-event="click"
                  data-for="tooltip-interactionType-3"
                  data-tip="custom tooltip here"
                  onClick={[Function]}
                  onKeyUp={[Function]}
                  role="button"
                  tabIndex={0}
                />
                <ReactTooltip
                  globalEventOff="focusout"
                  id="tooltip-interactionType-3"
                  insecure={true}
                  resizeHide={true}
                  wrapper="div"
                >
                  <div
                    className="__react_component_tooltip place-top type-dark "
                    data-id="tooltip"
                  />
                </ReactTooltip>
              </div>
            </td>
          </tr>
        </tbody>
      </ItemTable>
    </table>
  </div>
</ItemTableContainer>
`;

exports[`ItemPageTable sorts list on header click 2`] = `
<ItemTableContainer
  item={
    Object {
      "content": Object {
        "commonCoreStandardsDescription": "commonCoreStandardsDescription",
        "depthOfKnowledge": "depthOfKnowledge",
        "educationalDifficulty": "educationalDifficulty",
        "evidenceStatement": "evidenceStatement",
        "itemCardViewModel": Object {
          "bankKey": 1,
          "claimCode": "",
          "claimLabel": "",
          "grade": 1023,
          "gradeLabel": "",
          "interactionTypeCode": "",
          "interactionTypeLabel": "",
          "isPerformanceItem": true,
          "itemKey": 3,
          "subjectCode": "",
          "subjectLabel": "",
          "targetHash": 3123,
          "targetId": "",
          "targetShortName": "",
          "title": "",
        },
        "targetDescription": "targetDescription",
      },
      "kind": "success",
    }
  }
  itemCards={
    Array [
      Object {
        "bankKey": 1,
        "claimCode": "",
        "claimLabel": "",
        "grade": 1023,
        "gradeLabel": "",
        "interactionTypeCode": "",
        "interactionTypeLabel": "",
        "isPerformanceItem": true,
        "itemKey": 3,
        "subjectCode": "",
        "subjectLabel": "",
        "targetHash": 3123,
        "targetId": "",
        "targetShortName": "",
        "title": "",
      },
    ]
  }
  onRowSelection={[Function]}
>
  <div>
    <table
      className="item-table"
    >
      <HeaderTable
        columns={
          Array [
            Object {
              "accessor": [Function],
              "className": "item",
              "compare": [Function],
              "header": "Item",
            },
            Object {
              "accessor": [Function],
              "className": "claimAndTarget",
              "compare": [Function],
              "header": "Claim/Target",
            },
            Object {
              "accessor": [Function],
              "className": "subject",
              "compare": [Function],
              "header": "Subject",
            },
            Object {
              "accessor": [Function],
              "className": "grade",
              "compare": [Function],
              "header": "Grade",
            },
            Object {
              "accessor": [Function],
              "className": "interactionType",
              "compare": [Function],
              "header": "Item Type",
            },
          ]
        }
        onHeaderClick={[Function]}
        sorts={
          Array [
            Object {
              "col": Object {
                "accessor": [Function],
                "className": "item",
                "compare": [Function],
                "header": "Item",
              },
              "direction": 1,
              "resetSortCount": 0,
            },
            Object {
              "col": Object {
                "accessor": [Function],
                "className": "claimAndTarget",
                "compare": [Function],
                "header": "Claim/Target",
              },
              "direction": 1,
              "resetSortCount": 0,
            },
          ]
        }
      >
        <thead>
          <tr
            className="primary"
          >
            <td
              colSpan={2}
            />
            <th
              className="item"
              key="Item"
              onClick={[Function]}
              onKeyUp={[Function]}
              scope="col"
              tabIndex={0}
            >
              <div
                className="item"
              >
                <span>
                  Item
                </span>
                <span
                  aria-hidden="true"
                  className="fa fa-sort-asc"
                  style={
                    Object {
                      "color": "gray",
                    }
                  }
                />
              </div>
            </th>
            <th
              className="claimAndTarget"
              key="Claim/Target"
              onClick={[Function]}
              onKeyUp={[Function]}
              scope="col"
              tabIndex={0}
            >
              <div
                className="claimAndTarget"
              >
                <span>
                  Claim/Target
                </span>
                <span
                  aria-hidden="true"
                  className="fa fa-sort-asc"
                  style={
                    Object {
                      "color": "gray",
                    }
                  }
                />
              </div>
            </th>
            <th
              className="subject"
              key="Subject"
              onClick={[Function]}
              onKeyUp={[Function]}
              scope="col"
              tabIndex={0}
            >
              <div
                className="subject"
              >
                <span>
                  Subject
                </span>
                <span
                  aria-hidden="true"
                  className="fa fa-sort"
                  style={
                    Object {
                      "color": "gray",
                    }
                  }
                />
              </div>
            </th>
            <th
              className="grade"
              key="Grade"
              onClick={[Function]}
              onKeyUp={[Function]}
              scope="col"
              tabIndex={0}
            >
              <div
                className="grade"
              >
                <span>
                  Grade
                </span>
                <span
                  aria-hidden="true"
                  className="fa fa-sort"
                  style={
                    Object {
                      "color": "gray",
                    }
                  }
                />
              </div>
            </th>
            <th
              className="interactionType"
              key="Item Type"
              onClick={[Function]}
              onKeyUp={[Function]}
              scope="col"
              tabIndex={0}
            >
              <div
                className="interactionType"
              >
                <span>
                  Item Type
                </span>
                <span
                  aria-hidden="true"
                  className="fa fa-sort"
                  style={
                    Object {
                      "color": "gray",
                    }
                  }
                />
              </div>
            </th>
          </tr>
        </thead>
      </HeaderTable>
      <ItemTable
        columns={
          Array [
            Object {
              "accessor": [Function],
              "className": "item",
              "compare": [Function],
              "header": "Item",
            },
            Object {
              "accessor": [Function],
              "className": "claimAndTarget",
              "compare": [Function],
              "header": "Claim/Target",
            },
            Object {
              "accessor": [Function],
              "className": "subject",
              "compare": [Function],
              "header": "Subject",
            },
            Object {
              "accessor": [Function],
              "className": "grade",
              "compare": [Function],
              "header": "Grade",
            },
            Object {
              "accessor": [Function],
              "className": "interactionType",
              "compare": [Function],
              "header": "Item Type",
            },
          ]
        }
        item={
          Object {
            "content": Object {
              "commonCoreStandardsDescription": "commonCoreStandardsDescription",
              "depthOfKnowledge": "depthOfKnowledge",
              "educationalDifficulty": "educationalDifficulty",
              "evidenceStatement": "evidenceStatement",
              "itemCardViewModel": Object {
                "bankKey": 1,
                "claimCode": "",
                "claimLabel": "",
                "grade": 1023,
                "gradeLabel": "",
                "interactionTypeCode": "",
                "interactionTypeLabel": "",
                "isPerformanceItem": true,
                "itemKey": 3,
                "subjectCode": "",
                "subjectLabel": "",
                "targetHash": 3123,
                "targetId": "",
                "targetShortName": "",
                "title": "",
              },
              "targetDescription": "targetDescription",
            },
            "kind": "success",
          }
        }
        mapRows={
          Array [
            Object {
              "bankKey": 1,
              "claimCode": "",
              "claimLabel": "",
              "grade": 1023,
              "gradeLabel": "",
              "interactionTypeCode": "",
              "interactionTypeLabel": "",
              "isPerformanceItem": true,
              "itemKey": 3,
              "subjectCode": "",
              "subjectLabel": "",
              "targetHash": 3123,
              "targetId": "",
              "targetShortName": "",
              "title": "",
            },
          ]
        }
        onRowExpand={[Function]}
        onRowSelect={[Function]}
        sort={
          Array [
            Object {
              "col": Object {
                "accessor": [Function],
                "className": "item",
                "compare": [Function],
                "header": "Item",
              },
              "direction": 1,
              "resetSortCount": 0,
            },
            Object {
              "col": Object {
                "accessor": [Function],
                "className": "claimAndTarget",
                "compare": [Function],
                "header": "Claim/Target",
              },
              "direction": 1,
              "resetSortCount": 0,
            },
          ]
        }
      >
        <tbody>
          <tr
            className=""
            key="0"
            onClick={[Function]}
            onKeyUp={[Function]}
            tabIndex={0}
          >
            <td
              key="1"
              onClick={[Function]}
              onKeyUp={[Function]}
              tabIndex={0}
            >
              <i
                aria-hidden="true"
                className="fa fa-square-o fa-sm table-icon"
              />
               
            </td>
            <td
              key="3"
            >
              <i
                aria-hidden="true"
                className="fa fa-chevron-right fa-sm table-icon"
              />
            </td>
            <td
              className="item"
              key="Item"
            >
              <div
                className="item-3"
              >
                <a
                  data-event="click"
                  data-for="tooltip-item-3"
                  data-tip="custom tooltip here"
                  onClick={[Function]}
                  onKeyUp={[Function]}
                  role="button"
                  tabIndex={0}
                >
                  3
                </a>
                <ReactTooltip
                  globalEventOff="focusout"
                  id="tooltip-item-3"
                  insecure={true}
                  resizeHide={true}
                  wrapper="div"
                >
                  <div
                    className="__react_component_tooltip place-top type-dark "
                    data-id="tooltip"
                  />
                </ReactTooltip>
              </div>
            </td>
            <td
              className="claimAndTarget"
              key="Claim/Target"
            >
              <div
                className="claimAndTarget-3"
              >
                <a
                  data-event="click"
                  data-for="tooltip-claimAndTarget-3"
                  data-tip="custom tooltip here"
                  onClick={[Function]}
                  onKeyUp={[Function]}
                  role="button"
                  tabIndex={0}
                >
                  /
                </a>
                <ReactTooltip
                  globalEventOff="focusout"
                  id="tooltip-claimAndTarget-3"
                  insecure={true}
                  resizeHide={true}
                  wrapper="div"
                >
                  <div
                    className="__react_component_tooltip place-top type-dark "
                    data-id="tooltip"
                  />
                </ReactTooltip>
              </div>
            </td>
            <td
              className="subject"
              key="Subject"
            >
              <div
                className="subject-3"
              >
                <a
                  data-event="click"
                  data-for="tooltip-subject-3"
                  data-tip="custom tooltip here"
                  onClick={[Function]}
                  onKeyUp={[Function]}
                  role="button"
                  tabIndex={0}
                />
                <ReactTooltip
                  globalEventOff="focusout"
                  id="tooltip-subject-3"
                  insecure={true}
                  resizeHide={true}
                  wrapper="div"
                >
                  <div
                    className="__react_component_tooltip place-top type-dark "
                    data-id="tooltip"
                  />
                </ReactTooltip>
              </div>
            </td>
            <td
              className="grade"
              key="Grade"
            >
              <div
                className="grade-3"
              >
                <a
                  data-event="click"
                  data-for="tooltip-grade-3"
                  data-tip="custom tooltip here"
                  onClick={[Function]}
                  onKeyUp={[Function]}
                  role="button"
                  tabIndex={0}
                />
                <ReactTooltip
                  globalEventOff="focusout"
                  id="tooltip-grade-3"
                  insecure={true}
                  resizeHide={true}
                  wrapper="div"
                >
                  <div
                    className="__react_component_tooltip place-top type-dark "
                    data-id="tooltip"
                  />
                </ReactTooltip>
              </div>
            </td>
            <td
              className="interactionType"
              key="Item Type"
            >
              <div
                className="interactionType-3"
              >
                <a
                  data-event="click"
                  data-for="tooltip-interactionType-3"
                  data-tip="custom tooltip here"
                  onClick={[Function]}
                  onKeyUp={[Function]}
                  role="button"
                  tabIndex={0}
                />
                <ReactTooltip
                  globalEventOff="focusout"
                  id="tooltip-interactionType-3"
                  insecure={true}
                  resizeHide={true}
                  wrapper="div"
                >
                  <div
                    className="__react_component_tooltip place-top type-dark "
                    data-id="tooltip"
                  />
                </ReactTooltip>
              </div>
            </td>
          </tr>
        </tbody>
      </ItemTable>
    </table>
  </div>
</ItemTableContainer>
`;

exports[`ItemPageTable sorts list on header click 3`] = `
<ItemTableContainer
  item={
    Object {
      "content": Object {
        "commonCoreStandardsDescription": "commonCoreStandardsDescription",
        "depthOfKnowledge": "depthOfKnowledge",
        "educationalDifficulty": "educationalDifficulty",
        "evidenceStatement": "evidenceStatement",
        "itemCardViewModel": Object {
          "bankKey": 1,
          "claimCode": "",
          "claimLabel": "",
          "grade": 1023,
          "gradeLabel": "",
          "interactionTypeCode": "",
          "interactionTypeLabel": "",
          "isPerformanceItem": true,
          "itemKey": 3,
          "subjectCode": "",
          "subjectLabel": "",
          "targetHash": 3123,
          "targetId": "",
          "targetShortName": "",
          "title": "",
        },
        "targetDescription": "targetDescription",
      },
      "kind": "success",
    }
  }
  itemCards={
    Array [
      Object {
        "bankKey": 1,
        "claimCode": "",
        "claimLabel": "",
        "grade": 1023,
        "gradeLabel": "",
        "interactionTypeCode": "",
        "interactionTypeLabel": "",
        "isPerformanceItem": true,
        "itemKey": 3,
        "subjectCode": "",
        "subjectLabel": "",
        "targetHash": 3123,
        "targetId": "",
        "targetShortName": "",
        "title": "",
      },
    ]
  }
  onRowSelection={[Function]}
>
  <div>
    <table
      className="item-table"
    >
      <HeaderTable
        columns={
          Array [
            Object {
              "accessor": [Function],
              "className": "item",
              "compare": [Function],
              "header": "Item",
            },
            Object {
              "accessor": [Function],
              "className": "claimAndTarget",
              "compare": [Function],
              "header": "Claim/Target",
            },
            Object {
              "accessor": [Function],
              "className": "subject",
              "compare": [Function],
              "header": "Subject",
            },
            Object {
              "accessor": [Function],
              "className": "grade",
              "compare": [Function],
              "header": "Grade",
            },
            Object {
              "accessor": [Function],
              "className": "interactionType",
              "compare": [Function],
              "header": "Item Type",
            },
          ]
        }
        onHeaderClick={[Function]}
        sorts={
          Array [
            Object {
              "col": Object {
                "accessor": [Function],
                "className": "item",
                "compare": [Function],
                "header": "Item",
              },
              "direction": 1,
              "resetSortCount": 0,
            },
            Object {
              "col": Object {
                "accessor": [Function],
                "className": "claimAndTarget",
                "compare": [Function],
                "header": "Claim/Target",
              },
              "direction": 1,
              "resetSortCount": 0,
            },
            Object {
              "col": Object {
                "accessor": [Function],
                "className": "subject",
                "compare": [Function],
                "header": "Subject",
              },
              "direction": 1,
              "resetSortCount": 0,
            },
          ]
        }
      >
        <thead>
          <tr
            className="primary"
          >
            <td
              colSpan={2}
            />
            <th
              className="item"
              key="Item"
              onClick={[Function]}
              onKeyUp={[Function]}
              scope="col"
              tabIndex={0}
            >
              <div
                className="item"
              >
                <span>
                  Item
                </span>
                <span
                  aria-hidden="true"
                  className="fa fa-sort-asc"
                  style={
                    Object {
                      "color": "gray",
                    }
                  }
                />
              </div>
            </th>
            <th
              className="claimAndTarget"
              key="Claim/Target"
              onClick={[Function]}
              onKeyUp={[Function]}
              scope="col"
              tabIndex={0}
            >
              <div
                className="claimAndTarget"
              >
                <span>
                  Claim/Target
                </span>
                <span
                  aria-hidden="true"
                  className="fa fa-sort-asc"
                  style={
                    Object {
                      "color": "gray",
                    }
                  }
                />
              </div>
            </th>
            <th
              className="subject"
              key="Subject"
              onClick={[Function]}
              onKeyUp={[Function]}
              scope="col"
              tabIndex={0}
            >
              <div
                className="subject"
              >
                <span>
                  Subject
                </span>
                <span
                  aria-hidden="true"
                  className="fa fa-sort-asc"
                  style={
                    Object {
                      "color": "gray",
                    }
                  }
                />
              </div>
            </th>
            <th
              className="grade"
              key="Grade"
              onClick={[Function]}
              onKeyUp={[Function]}
              scope="col"
              tabIndex={0}
            >
              <div
                className="grade"
              >
                <span>
                  Grade
                </span>
                <span
                  aria-hidden="true"
                  className="fa fa-sort"
                  style={
                    Object {
                      "color": "gray",
                    }
                  }
                />
              </div>
            </th>
            <th
              className="interactionType"
              key="Item Type"
              onClick={[Function]}
              onKeyUp={[Function]}
              scope="col"
              tabIndex={0}
            >
              <div
                className="interactionType"
              >
                <span>
                  Item Type
                </span>
                <span
                  aria-hidden="true"
                  className="fa fa-sort"
                  style={
                    Object {
                      "color": "gray",
                    }
                  }
                />
              </div>
            </th>
          </tr>
        </thead>
      </HeaderTable>
      <ItemTable
        columns={
          Array [
            Object {
              "accessor": [Function],
              "className": "item",
              "compare": [Function],
              "header": "Item",
            },
            Object {
              "accessor": [Function],
              "className": "claimAndTarget",
              "compare": [Function],
              "header": "Claim/Target",
            },
            Object {
              "accessor": [Function],
              "className": "subject",
              "compare": [Function],
              "header": "Subject",
            },
            Object {
              "accessor": [Function],
              "className": "grade",
              "compare": [Function],
              "header": "Grade",
            },
            Object {
              "accessor": [Function],
              "className": "interactionType",
              "compare": [Function],
              "header": "Item Type",
            },
          ]
        }
        item={
          Object {
            "content": Object {
              "commonCoreStandardsDescription": "commonCoreStandardsDescription",
              "depthOfKnowledge": "depthOfKnowledge",
              "educationalDifficulty": "educationalDifficulty",
              "evidenceStatement": "evidenceStatement",
              "itemCardViewModel": Object {
                "bankKey": 1,
                "claimCode": "",
                "claimLabel": "",
                "grade": 1023,
                "gradeLabel": "",
                "interactionTypeCode": "",
                "interactionTypeLabel": "",
                "isPerformanceItem": true,
                "itemKey": 3,
                "subjectCode": "",
                "subjectLabel": "",
                "targetHash": 3123,
                "targetId": "",
                "targetShortName": "",
                "title": "",
              },
              "targetDescription": "targetDescription",
            },
            "kind": "success",
          }
        }
        mapRows={
          Array [
            Object {
              "bankKey": 1,
              "claimCode": "",
              "claimLabel": "",
              "grade": 1023,
              "gradeLabel": "",
              "interactionTypeCode": "",
              "interactionTypeLabel": "",
              "isPerformanceItem": true,
              "itemKey": 3,
              "subjectCode": "",
              "subjectLabel": "",
              "targetHash": 3123,
              "targetId": "",
              "targetShortName": "",
              "title": "",
            },
          ]
        }
        onRowExpand={[Function]}
        onRowSelect={[Function]}
        sort={
          Array [
            Object {
              "col": Object {
                "accessor": [Function],
                "className": "item",
                "compare": [Function],
                "header": "Item",
              },
              "direction": 1,
              "resetSortCount": 0,
            },
            Object {
              "col": Object {
                "accessor": [Function],
                "className": "claimAndTarget",
                "compare": [Function],
                "header": "Claim/Target",
              },
              "direction": 1,
              "resetSortCount": 0,
            },
            Object {
              "col": Object {
                "accessor": [Function],
                "className": "subject",
                "compare": [Function],
                "header": "Subject",
              },
              "direction": 1,
              "resetSortCount": 0,
            },
          ]
        }
      >
        <tbody>
          <tr
            className=""
            key="0"
            onClick={[Function]}
            onKeyUp={[Function]}
            tabIndex={0}
          >
            <td
              key="1"
              onClick={[Function]}
              onKeyUp={[Function]}
              tabIndex={0}
            >
              <i
                aria-hidden="true"
                className="fa fa-square-o fa-sm table-icon"
              />
               
            </td>
            <td
              key="3"
            >
              <i
                aria-hidden="true"
                className="fa fa-chevron-right fa-sm table-icon"
              />
            </td>
            <td
              className="item"
              key="Item"
            >
              <div
                className="item-3"
              >
                <a
                  data-event="click"
                  data-for="tooltip-item-3"
                  data-tip="custom tooltip here"
                  onClick={[Function]}
                  onKeyUp={[Function]}
                  role="button"
                  tabIndex={0}
                >
                  3
                </a>
                <ReactTooltip
                  globalEventOff="focusout"
                  id="tooltip-item-3"
                  insecure={true}
                  resizeHide={true}
                  wrapper="div"
                >
                  <div
                    className="__react_component_tooltip place-top type-dark "
                    data-id="tooltip"
                  />
                </ReactTooltip>
              </div>
            </td>
            <td
              className="claimAndTarget"
              key="Claim/Target"
            >
              <div
                className="claimAndTarget-3"
              >
                <a
                  data-event="click"
                  data-for="tooltip-claimAndTarget-3"
                  data-tip="custom tooltip here"
                  onClick={[Function]}
                  onKeyUp={[Function]}
                  role="button"
                  tabIndex={0}
                >
                  /
                </a>
                <ReactTooltip
                  globalEventOff="focusout"
                  id="tooltip-claimAndTarget-3"
                  insecure={true}
                  resizeHide={true}
                  wrapper="div"
                >
                  <div
                    className="__react_component_tooltip place-top type-dark "
                    data-id="tooltip"
                  />
                </ReactTooltip>
              </div>
            </td>
            <td
              className="subject"
              key="Subject"
            >
              <div
                className="subject-3"
              >
                <a
                  data-event="click"
                  data-for="tooltip-subject-3"
                  data-tip="custom tooltip here"
                  onClick={[Function]}
                  onKeyUp={[Function]}
                  role="button"
                  tabIndex={0}
                />
                <ReactTooltip
                  globalEventOff="focusout"
                  id="tooltip-subject-3"
                  insecure={true}
                  resizeHide={true}
                  wrapper="div"
                >
                  <div
                    className="__react_component_tooltip place-top type-dark "
                    data-id="tooltip"
                  />
                </ReactTooltip>
              </div>
            </td>
            <td
              className="grade"
              key="Grade"
            >
              <div
                className="grade-3"
              >
                <a
                  data-event="click"
                  data-for="tooltip-grade-3"
                  data-tip="custom tooltip here"
                  onClick={[Function]}
                  onKeyUp={[Function]}
                  role="button"
                  tabIndex={0}
                />
                <ReactTooltip
                  globalEventOff="focusout"
                  id="tooltip-grade-3"
                  insecure={true}
                  resizeHide={true}
                  wrapper="div"
                >
                  <div
                    className="__react_component_tooltip place-top type-dark "
                    data-id="tooltip"
                  />
                </ReactTooltip>
              </div>
            </td>
            <td
              className="interactionType"
              key="Item Type"
            >
              <div
                className="interactionType-3"
              >
                <a
                  data-event="click"
                  data-for="tooltip-interactionType-3"
                  data-tip="custom tooltip here"
                  onClick={[Function]}
                  onKeyUp={[Function]}
                  role="button"
                  tabIndex={0}
                />
                <ReactTooltip
                  globalEventOff="focusout"
                  id="tooltip-interactionType-3"
                  insecure={true}
                  resizeHide={true}
                  wrapper="div"
                >
                  <div
                    className="__react_component_tooltip place-top type-dark "
                    data-id="tooltip"
                  />
                </ReactTooltip>
              </div>
            </td>
          </tr>
        </tbody>
      </ItemTable>
    </table>
  </div>
</ItemTableContainer>
`;

exports[`ItemPageTable sorts list on header click 4`] = `
<ItemTableContainer
  item={
    Object {
      "content": Object {
        "commonCoreStandardsDescription": "commonCoreStandardsDescription",
        "depthOfKnowledge": "depthOfKnowledge",
        "educationalDifficulty": "educationalDifficulty",
        "evidenceStatement": "evidenceStatement",
        "itemCardViewModel": Object {
          "bankKey": 1,
          "claimCode": "",
          "claimLabel": "",
          "grade": 1023,
          "gradeLabel": "",
          "interactionTypeCode": "",
          "interactionTypeLabel": "",
          "isPerformanceItem": true,
          "itemKey": 3,
          "subjectCode": "",
          "subjectLabel": "",
          "targetHash": 3123,
          "targetId": "",
          "targetShortName": "",
          "title": "",
        },
        "targetDescription": "targetDescription",
      },
      "kind": "success",
    }
  }
  itemCards={
    Array [
      Object {
        "bankKey": 1,
        "claimCode": "",
        "claimLabel": "",
        "grade": 1023,
        "gradeLabel": "",
        "interactionTypeCode": "",
        "interactionTypeLabel": "",
        "isPerformanceItem": true,
        "itemKey": 3,
        "subjectCode": "",
        "subjectLabel": "",
        "targetHash": 3123,
        "targetId": "",
        "targetShortName": "",
        "title": "",
      },
    ]
  }
  onRowSelection={[Function]}
>
  <div>
    <table
      className="item-table"
    >
      <HeaderTable
        columns={
          Array [
            Object {
              "accessor": [Function],
              "className": "item",
              "compare": [Function],
              "header": "Item",
            },
            Object {
              "accessor": [Function],
              "className": "claimAndTarget",
              "compare": [Function],
              "header": "Claim/Target",
            },
            Object {
              "accessor": [Function],
              "className": "subject",
              "compare": [Function],
              "header": "Subject",
            },
            Object {
              "accessor": [Function],
              "className": "grade",
              "compare": [Function],
              "header": "Grade",
            },
            Object {
              "accessor": [Function],
              "className": "interactionType",
              "compare": [Function],
              "header": "Item Type",
            },
          ]
        }
        onHeaderClick={[Function]}
        sorts={
          Array [
            Object {
              "col": Object {
                "accessor": [Function],
                "className": "item",
                "compare": [Function],
                "header": "Item",
              },
              "direction": 1,
              "resetSortCount": 0,
            },
            Object {
              "col": Object {
                "accessor": [Function],
                "className": "claimAndTarget",
                "compare": [Function],
                "header": "Claim/Target",
              },
              "direction": 1,
              "resetSortCount": 0,
            },
            Object {
              "col": Object {
                "accessor": [Function],
                "className": "subject",
                "compare": [Function],
                "header": "Subject",
              },
              "direction": 1,
              "resetSortCount": 0,
            },
            Object {
              "col": Object {
                "accessor": [Function],
                "className": "grade",
                "compare": [Function],
                "header": "Grade",
              },
              "direction": 1,
              "resetSortCount": 0,
            },
          ]
        }
      >
        <thead>
          <tr
            className="primary"
          >
            <td
              colSpan={2}
            />
            <th
              className="item"
              key="Item"
              onClick={[Function]}
              onKeyUp={[Function]}
              scope="col"
              tabIndex={0}
            >
              <div
                className="item"
              >
                <span>
                  Item
                </span>
                <span
                  aria-hidden="true"
                  className="fa fa-sort-asc"
                  style={
                    Object {
                      "color": "gray",
                    }
                  }
                />
              </div>
            </th>
            <th
              className="claimAndTarget"
              key="Claim/Target"
              onClick={[Function]}
              onKeyUp={[Function]}
              scope="col"
              tabIndex={0}
            >
              <div
                className="claimAndTarget"
              >
                <span>
                  Claim/Target
                </span>
                <span
                  aria-hidden="true"
                  className="fa fa-sort-asc"
                  style={
                    Object {
                      "color": "gray",
                    }
                  }
                />
              </div>
            </th>
            <th
              className="subject"
              key="Subject"
              onClick={[Function]}
              onKeyUp={[Function]}
              scope="col"
              tabIndex={0}
            >
              <div
                className="subject"
              >
                <span>
                  Subject
                </span>
                <span
                  aria-hidden="true"
                  className="fa fa-sort-asc"
                  style={
                    Object {
                      "color": "gray",
                    }
                  }
                />
              </div>
            </th>
            <th
              className="grade"
              key="Grade"
              onClick={[Function]}
              onKeyUp={[Function]}
              scope="col"
              tabIndex={0}
            >
              <div
                className="grade"
              >
                <span>
                  Grade
                </span>
                <span
                  aria-hidden="true"
                  className="fa fa-sort-asc"
                  style={
                    Object {
                      "color": "gray",
                    }
                  }
                />
              </div>
            </th>
            <th
              className="interactionType"
              key="Item Type"
              onClick={[Function]}
              onKeyUp={[Function]}
              scope="col"
              tabIndex={0}
            >
              <div
                className="interactionType"
              >
                <span>
                  Item Type
                </span>
                <span
                  aria-hidden="true"
                  className="fa fa-sort"
                  style={
                    Object {
                      "color": "gray",
                    }
                  }
                />
              </div>
            </th>
          </tr>
        </thead>
      </HeaderTable>
      <ItemTable
        columns={
          Array [
            Object {
              "accessor": [Function],
              "className": "item",
              "compare": [Function],
              "header": "Item",
            },
            Object {
              "accessor": [Function],
              "className": "claimAndTarget",
              "compare": [Function],
              "header": "Claim/Target",
            },
            Object {
              "accessor": [Function],
              "className": "subject",
              "compare": [Function],
              "header": "Subject",
            },
            Object {
              "accessor": [Function],
              "className": "grade",
              "compare": [Function],
              "header": "Grade",
            },
            Object {
              "accessor": [Function],
              "className": "interactionType",
              "compare": [Function],
              "header": "Item Type",
            },
          ]
        }
        item={
          Object {
            "content": Object {
              "commonCoreStandardsDescription": "commonCoreStandardsDescription",
              "depthOfKnowledge": "depthOfKnowledge",
              "educationalDifficulty": "educationalDifficulty",
              "evidenceStatement": "evidenceStatement",
              "itemCardViewModel": Object {
                "bankKey": 1,
                "claimCode": "",
                "claimLabel": "",
                "grade": 1023,
                "gradeLabel": "",
                "interactionTypeCode": "",
                "interactionTypeLabel": "",
                "isPerformanceItem": true,
                "itemKey": 3,
                "subjectCode": "",
                "subjectLabel": "",
                "targetHash": 3123,
                "targetId": "",
                "targetShortName": "",
                "title": "",
              },
              "targetDescription": "targetDescription",
            },
            "kind": "success",
          }
        }
        mapRows={
          Array [
            Object {
              "bankKey": 1,
              "claimCode": "",
              "claimLabel": "",
              "grade": 1023,
              "gradeLabel": "",
              "interactionTypeCode": "",
              "interactionTypeLabel": "",
              "isPerformanceItem": true,
              "itemKey": 3,
              "subjectCode": "",
              "subjectLabel": "",
              "targetHash": 3123,
              "targetId": "",
              "targetShortName": "",
              "title": "",
            },
          ]
        }
        onRowExpand={[Function]}
        onRowSelect={[Function]}
        sort={
          Array [
            Object {
              "col": Object {
                "accessor": [Function],
                "className": "item",
                "compare": [Function],
                "header": "Item",
              },
              "direction": 1,
              "resetSortCount": 0,
            },
            Object {
              "col": Object {
                "accessor": [Function],
                "className": "claimAndTarget",
                "compare": [Function],
                "header": "Claim/Target",
              },
              "direction": 1,
              "resetSortCount": 0,
            },
            Object {
              "col": Object {
                "accessor": [Function],
                "className": "subject",
                "compare": [Function],
                "header": "Subject",
              },
              "direction": 1,
              "resetSortCount": 0,
            },
            Object {
              "col": Object {
                "accessor": [Function],
                "className": "grade",
                "compare": [Function],
                "header": "Grade",
              },
              "direction": 1,
              "resetSortCount": 0,
            },
          ]
        }
      >
        <tbody>
          <tr
            className=""
            key="0"
            onClick={[Function]}
            onKeyUp={[Function]}
            tabIndex={0}
          >
            <td
              key="1"
              onClick={[Function]}
              onKeyUp={[Function]}
              tabIndex={0}
            >
              <i
                aria-hidden="true"
                className="fa fa-square-o fa-sm table-icon"
              />
               
            </td>
            <td
              key="3"
            >
              <i
                aria-hidden="true"
                className="fa fa-chevron-right fa-sm table-icon"
              />
            </td>
            <td
              className="item"
              key="Item"
            >
              <div
                className="item-3"
              >
                <a
                  data-event="click"
                  data-for="tooltip-item-3"
                  data-tip="custom tooltip here"
                  onClick={[Function]}
                  onKeyUp={[Function]}
                  role="button"
                  tabIndex={0}
                >
                  3
                </a>
                <ReactTooltip
                  globalEventOff="focusout"
                  id="tooltip-item-3"
                  insecure={true}
                  resizeHide={true}
                  wrapper="div"
                >
                  <div
                    className="__react_component_tooltip place-top type-dark "
                    data-id="tooltip"
                  />
                </ReactTooltip>
              </div>
            </td>
            <td
              className="claimAndTarget"
              key="Claim/Target"
            >
              <div
                className="claimAndTarget-3"
              >
                <a
                  data-event="click"
                  data-for="tooltip-claimAndTarget-3"
                  data-tip="custom tooltip here"
                  onClick={[Function]}
                  onKeyUp={[Function]}
                  role="button"
                  tabIndex={0}
                >
                  /
                </a>
                <ReactTooltip
                  globalEventOff="focusout"
                  id="tooltip-claimAndTarget-3"
                  insecure={true}
                  resizeHide={true}
                  wrapper="div"
                >
                  <div
                    className="__react_component_tooltip place-top type-dark "
                    data-id="tooltip"
                  />
                </ReactTooltip>
              </div>
            </td>
            <td
              className="subject"
              key="Subject"
            >
              <div
                className="subject-3"
              >
                <a
                  data-event="click"
                  data-for="tooltip-subject-3"
                  data-tip="custom tooltip here"
                  onClick={[Function]}
                  onKeyUp={[Function]}
                  role="button"
                  tabIndex={0}
                />
                <ReactTooltip
                  globalEventOff="focusout"
                  id="tooltip-subject-3"
                  insecure={true}
                  resizeHide={true}
                  wrapper="div"
                >
                  <div
                    className="__react_component_tooltip place-top type-dark "
                    data-id="tooltip"
                  />
                </ReactTooltip>
              </div>
            </td>
            <td
              className="grade"
              key="Grade"
            >
              <div
                className="grade-3"
              >
                <a
                  data-event="click"
                  data-for="tooltip-grade-3"
                  data-tip="custom tooltip here"
                  onClick={[Function]}
                  onKeyUp={[Function]}
                  role="button"
                  tabIndex={0}
                />
                <ReactTooltip
                  globalEventOff="focusout"
                  id="tooltip-grade-3"
                  insecure={true}
                  resizeHide={true}
                  wrapper="div"
                >
                  <div
                    className="__react_component_tooltip place-top type-dark "
                    data-id="tooltip"
                  />
                </ReactTooltip>
              </div>
            </td>
            <td
              className="interactionType"
              key="Item Type"
            >
              <div
                className="interactionType-3"
              >
                <a
                  data-event="click"
                  data-for="tooltip-interactionType-3"
                  data-tip="custom tooltip here"
                  onClick={[Function]}
                  onKeyUp={[Function]}
                  role="button"
                  tabIndex={0}
                />
                <ReactTooltip
                  globalEventOff="focusout"
                  id="tooltip-interactionType-3"
                  insecure={true}
                  resizeHide={true}
                  wrapper="div"
                >
                  <div
                    className="__react_component_tooltip place-top type-dark "
                    data-id="tooltip"
                  />
                </ReactTooltip>
              </div>
            </td>
          </tr>
        </tbody>
      </ItemTable>
    </table>
  </div>
</ItemTableContainer>
`;

exports[`ItemPageTable sorts list on header click 5`] = `
<ItemTableContainer
  item={
    Object {
      "content": Object {
        "commonCoreStandardsDescription": "commonCoreStandardsDescription",
        "depthOfKnowledge": "depthOfKnowledge",
        "educationalDifficulty": "educationalDifficulty",
        "evidenceStatement": "evidenceStatement",
        "itemCardViewModel": Object {
          "bankKey": 1,
          "claimCode": "",
          "claimLabel": "",
          "grade": 1023,
          "gradeLabel": "",
          "interactionTypeCode": "",
          "interactionTypeLabel": "",
          "isPerformanceItem": true,
          "itemKey": 3,
          "subjectCode": "",
          "subjectLabel": "",
          "targetHash": 3123,
          "targetId": "",
          "targetShortName": "",
          "title": "",
        },
        "targetDescription": "targetDescription",
      },
      "kind": "success",
    }
  }
  itemCards={
    Array [
      Object {
        "bankKey": 1,
        "claimCode": "",
        "claimLabel": "",
        "grade": 1023,
        "gradeLabel": "",
        "interactionTypeCode": "",
        "interactionTypeLabel": "",
        "isPerformanceItem": true,
        "itemKey": 3,
        "subjectCode": "",
        "subjectLabel": "",
        "targetHash": 3123,
        "targetId": "",
        "targetShortName": "",
        "title": "",
      },
    ]
  }
  onRowSelection={[Function]}
>
  <div>
    <table
      className="item-table"
    >
      <HeaderTable
        columns={
          Array [
            Object {
              "accessor": [Function],
              "className": "item",
              "compare": [Function],
              "header": "Item",
            },
            Object {
              "accessor": [Function],
              "className": "claimAndTarget",
              "compare": [Function],
              "header": "Claim/Target",
            },
            Object {
              "accessor": [Function],
              "className": "subject",
              "compare": [Function],
              "header": "Subject",
            },
            Object {
              "accessor": [Function],
              "className": "grade",
              "compare": [Function],
              "header": "Grade",
            },
            Object {
              "accessor": [Function],
              "className": "interactionType",
              "compare": [Function],
              "header": "Item Type",
            },
          ]
        }
        onHeaderClick={[Function]}
        sorts={
          Array [
            Object {
              "col": Object {
                "accessor": [Function],
                "className": "item",
                "compare": [Function],
                "header": "Item",
              },
              "direction": 1,
              "resetSortCount": 0,
            },
            Object {
              "col": Object {
                "accessor": [Function],
                "className": "claimAndTarget",
                "compare": [Function],
                "header": "Claim/Target",
              },
              "direction": 1,
              "resetSortCount": 0,
            },
            Object {
              "col": Object {
                "accessor": [Function],
                "className": "subject",
                "compare": [Function],
                "header": "Subject",
              },
              "direction": 1,
              "resetSortCount": 0,
            },
            Object {
              "col": Object {
                "accessor": [Function],
                "className": "grade",
                "compare": [Function],
                "header": "Grade",
              },
              "direction": 1,
              "resetSortCount": 0,
            },
            Object {
              "col": Object {
                "accessor": [Function],
                "className": "interactionType",
                "compare": [Function],
                "header": "Item Type",
              },
              "direction": 1,
              "resetSortCount": 0,
            },
          ]
        }
      >
        <thead>
          <tr
            className="primary"
          >
            <td
              colSpan={2}
            />
            <th
              className="item"
              key="Item"
              onClick={[Function]}
              onKeyUp={[Function]}
              scope="col"
              tabIndex={0}
            >
              <div
                className="item"
              >
                <span>
                  Item
                </span>
                <span
                  aria-hidden="true"
                  className="fa fa-sort-asc"
                  style={
                    Object {
                      "color": "gray",
                    }
                  }
                />
              </div>
            </th>
            <th
              className="claimAndTarget"
              key="Claim/Target"
              onClick={[Function]}
              onKeyUp={[Function]}
              scope="col"
              tabIndex={0}
            >
              <div
                className="claimAndTarget"
              >
                <span>
                  Claim/Target
                </span>
                <span
                  aria-hidden="true"
                  className="fa fa-sort-asc"
                  style={
                    Object {
                      "color": "gray",
                    }
                  }
                />
              </div>
            </th>
            <th
              className="subject"
              key="Subject"
              onClick={[Function]}
              onKeyUp={[Function]}
              scope="col"
              tabIndex={0}
            >
              <div
                className="subject"
              >
                <span>
                  Subject
                </span>
                <span
                  aria-hidden="true"
                  className="fa fa-sort-asc"
                  style={
                    Object {
                      "color": "gray",
                    }
                  }
                />
              </div>
            </th>
            <th
              className="grade"
              key="Grade"
              onClick={[Function]}
              onKeyUp={[Function]}
              scope="col"
              tabIndex={0}
            >
              <div
                className="grade"
              >
                <span>
                  Grade
                </span>
                <span
                  aria-hidden="true"
                  className="fa fa-sort-asc"
                  style={
                    Object {
                      "color": "gray",
                    }
                  }
                />
              </div>
            </th>
            <th
              className="interactionType"
              key="Item Type"
              onClick={[Function]}
              onKeyUp={[Function]}
              scope="col"
              tabIndex={0}
            >
              <div
                className="interactionType"
              >
                <span>
                  Item Type
                </span>
                <span
                  aria-hidden="true"
                  className="fa fa-sort-asc"
                  style={
                    Object {
                      "color": "gray",
                    }
                  }
                />
              </div>
            </th>
          </tr>
        </thead>
      </HeaderTable>
      <ItemTable
        columns={
          Array [
            Object {
              "accessor": [Function],
              "className": "item",
              "compare": [Function],
              "header": "Item",
            },
            Object {
              "accessor": [Function],
              "className": "claimAndTarget",
              "compare": [Function],
              "header": "Claim/Target",
            },
            Object {
              "accessor": [Function],
              "className": "subject",
              "compare": [Function],
              "header": "Subject",
            },
            Object {
              "accessor": [Function],
              "className": "grade",
              "compare": [Function],
              "header": "Grade",
            },
            Object {
              "accessor": [Function],
              "className": "interactionType",
              "compare": [Function],
              "header": "Item Type",
            },
          ]
        }
        item={
          Object {
            "content": Object {
              "commonCoreStandardsDescription": "commonCoreStandardsDescription",
              "depthOfKnowledge": "depthOfKnowledge",
              "educationalDifficulty": "educationalDifficulty",
              "evidenceStatement": "evidenceStatement",
              "itemCardViewModel": Object {
                "bankKey": 1,
                "claimCode": "",
                "claimLabel": "",
                "grade": 1023,
                "gradeLabel": "",
                "interactionTypeCode": "",
                "interactionTypeLabel": "",
                "isPerformanceItem": true,
                "itemKey": 3,
                "subjectCode": "",
                "subjectLabel": "",
                "targetHash": 3123,
                "targetId": "",
                "targetShortName": "",
                "title": "",
              },
              "targetDescription": "targetDescription",
            },
            "kind": "success",
          }
        }
        mapRows={
          Array [
            Object {
              "bankKey": 1,
              "claimCode": "",
              "claimLabel": "",
              "grade": 1023,
              "gradeLabel": "",
              "interactionTypeCode": "",
              "interactionTypeLabel": "",
              "isPerformanceItem": true,
              "itemKey": 3,
              "subjectCode": "",
              "subjectLabel": "",
              "targetHash": 3123,
              "targetId": "",
              "targetShortName": "",
              "title": "",
            },
          ]
        }
        onRowExpand={[Function]}
        onRowSelect={[Function]}
        sort={
          Array [
            Object {
              "col": Object {
                "accessor": [Function],
                "className": "item",
                "compare": [Function],
                "header": "Item",
              },
              "direction": 1,
              "resetSortCount": 0,
            },
            Object {
              "col": Object {
                "accessor": [Function],
                "className": "claimAndTarget",
                "compare": [Function],
                "header": "Claim/Target",
              },
              "direction": 1,
              "resetSortCount": 0,
            },
            Object {
              "col": Object {
                "accessor": [Function],
                "className": "subject",
                "compare": [Function],
                "header": "Subject",
              },
              "direction": 1,
              "resetSortCount": 0,
            },
            Object {
              "col": Object {
                "accessor": [Function],
                "className": "grade",
                "compare": [Function],
                "header": "Grade",
              },
              "direction": 1,
              "resetSortCount": 0,
            },
            Object {
              "col": Object {
                "accessor": [Function],
                "className": "interactionType",
                "compare": [Function],
                "header": "Item Type",
              },
              "direction": 1,
              "resetSortCount": 0,
            },
          ]
        }
      >
        <tbody>
          <tr
            className=""
            key="0"
            onClick={[Function]}
            onKeyUp={[Function]}
            tabIndex={0}
          >
            <td
              key="1"
              onClick={[Function]}
              onKeyUp={[Function]}
              tabIndex={0}
            >
              <i
                aria-hidden="true"
                className="fa fa-square-o fa-sm table-icon"
              />
               
            </td>
            <td
              key="3"
            >
              <i
                aria-hidden="true"
                className="fa fa-chevron-right fa-sm table-icon"
              />
            </td>
            <td
              className="item"
              key="Item"
            >
              <div
                className="item-3"
              >
                <a
                  data-event="click"
                  data-for="tooltip-item-3"
                  data-tip="custom tooltip here"
                  onClick={[Function]}
                  onKeyUp={[Function]}
                  role="button"
                  tabIndex={0}
                >
                  3
                </a>
                <ReactTooltip
                  globalEventOff="focusout"
                  id="tooltip-item-3"
                  insecure={true}
                  resizeHide={true}
                  wrapper="div"
                >
                  <div
                    className="__react_component_tooltip place-top type-dark "
                    data-id="tooltip"
                  />
                </ReactTooltip>
              </div>
            </td>
            <td
              className="claimAndTarget"
              key="Claim/Target"
            >
              <div
                className="claimAndTarget-3"
              >
                <a
                  data-event="click"
                  data-for="tooltip-claimAndTarget-3"
                  data-tip="custom tooltip here"
                  onClick={[Function]}
                  onKeyUp={[Function]}
                  role="button"
                  tabIndex={0}
                >
                  /
                </a>
                <ReactTooltip
                  globalEventOff="focusout"
                  id="tooltip-claimAndTarget-3"
                  insecure={true}
                  resizeHide={true}
                  wrapper="div"
                >
                  <div
                    className="__react_component_tooltip place-top type-dark "
                    data-id="tooltip"
                  />
                </ReactTooltip>
              </div>
            </td>
            <td
              className="subject"
              key="Subject"
            >
              <div
                className="subject-3"
              >
                <a
                  data-event="click"
                  data-for="tooltip-subject-3"
                  data-tip="custom tooltip here"
                  onClick={[Function]}
                  onKeyUp={[Function]}
                  role="button"
                  tabIndex={0}
                />
                <ReactTooltip
                  globalEventOff="focusout"
                  id="tooltip-subject-3"
                  insecure={true}
                  resizeHide={true}
                  wrapper="div"
                >
                  <div
                    className="__react_component_tooltip place-top type-dark "
                    data-id="tooltip"
                  />
                </ReactTooltip>
              </div>
            </td>
            <td
              className="grade"
              key="Grade"
            >
              <div
                className="grade-3"
              >
                <a
                  data-event="click"
                  data-for="tooltip-grade-3"
                  data-tip="custom tooltip here"
                  onClick={[Function]}
                  onKeyUp={[Function]}
                  role="button"
                  tabIndex={0}
                />
                <ReactTooltip
                  globalEventOff="focusout"
                  id="tooltip-grade-3"
                  insecure={true}
                  resizeHide={true}
                  wrapper="div"
                >
                  <div
                    className="__react_component_tooltip place-top type-dark "
                    data-id="tooltip"
                  />
                </ReactTooltip>
              </div>
            </td>
            <td
              className="interactionType"
              key="Item Type"
            >
              <div
                className="interactionType-3"
              >
                <a
                  data-event="click"
                  data-for="tooltip-interactionType-3"
                  data-tip="custom tooltip here"
                  onClick={[Function]}
                  onKeyUp={[Function]}
                  role="button"
                  tabIndex={0}
                />
                <ReactTooltip
                  globalEventOff="focusout"
                  id="tooltip-interactionType-3"
                  insecure={true}
                  resizeHide={true}
                  wrapper="div"
                >
                  <div
                    className="__react_component_tooltip place-top type-dark "
                    data-id="tooltip"
                  />
                </ReactTooltip>
              </div>
            </td>
          </tr>
        </tbody>
      </ItemTable>
    </table>
  </div>
</ItemTableContainer>
`;
